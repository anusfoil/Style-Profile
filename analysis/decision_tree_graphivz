digraph Tree {
node [shape=box, style="filled", color="black", fontname="helvetica"] ;
edge [fontname="helvetica"] ;
0 [label="sp_async_cor_onset <= -0.002\ngini = 0.936\nsamples = 786\nvalue = [45, 45, 74, 53, 47, 22, 20, 37, 9, 37, 42, 12\n10, 24, 15, 79, 76, 62, 42, 18, 17]\nclass = Emil Gilels", fillcolor="#fffeff"] ;
1 [label="sp_kor_repeated <= -0.019\ngini = 0.746\nsamples = 66\nvalue = [0, 1, 27, 0, 3, 0, 0, 12, 1, 1, 0, 0, 0, 0\n0, 0, 10, 0, 11, 0, 0]\nclass = András Schiff", fillcolor="#f8f7c8"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="sp_async_delta <= 0.0\ngini = 0.696\nsamples = 49\nvalue = [0, 1, 23, 0, 3, 0, 0, 11, 0, 1, 0, 0, 0, 0\n0, 0, 8, 0, 2, 0, 0]\nclass = András Schiff", fillcolor="#f7f6c0"] ;
1 -> 2 ;
3 [label="sp_async_cor_onset <= -0.007\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#6aec9e"] ;
2 -> 3 ;
4 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
3 -> 4 ;
5 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
3 -> 5 ;
6 [label="sp_kor_repeated <= -0.028\ngini = 0.668\nsamples = 44\nvalue = [0, 1, 23, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0, 0\n0, 0, 7, 0, 2, 0, 0]\nclass = András Schiff", fillcolor="#f4f2a9"] ;
2 -> 6 ;
7 [label="sp_kor_repeated <= -0.044\ngini = 0.56\nsamples = 27\nvalue = [0, 1, 17, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 5, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#f1ef93"] ;
6 -> 7 ;
8 [label="sp_kor_repeated <= -0.048\ngini = 0.667\nsamples = 6\nvalue = [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f3b0f5"] ;
7 -> 8 ;
9 [label="sp_tempo_std <= 0.996\ngini = 0.667\nsamples = 3\nvalue = [0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
8 -> 9 ;
10 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
9 -> 10 ;
11 [label="sp_async_cor_onset <= -0.004\ngini = 0.5\nsamples = 2\nvalue = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
9 -> 11 ;
12 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
11 -> 12 ;
13 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
11 -> 13 ;
14 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
8 -> 14 ;
15 [label="sp_async_cor_vel <= 0.006\ngini = 0.399\nsamples = 21\nvalue = [0, 0, 16, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#ecea6d"] ;
7 -> 15 ;
16 [label="sp_async_cor_onset <= -0.003\ngini = 0.625\nsamples = 8\nvalue = [0, 0, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#f6f5bd"] ;
15 -> 16 ;
17 [label="sp_async_cor_vel <= 0.0\ngini = 0.444\nsamples = 6\nvalue = [0, 0, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
16 -> 17 ;
18 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
17 -> 18 ;
19 [label="sp_async_voice_std <= 0.0\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#c2f29c"] ;
17 -> 19 ;
20 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
19 -> 20 ;
21 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
19 -> 21 ;
22 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
16 -> 22 ;
23 [label="sp_tempo_std <= 0.999\ngini = 0.142\nsamples = 13\nvalue = [0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#e7e449"] ;
15 -> 23 ;
24 [label="gini = 0.0\nsamples = 10\nvalue = [0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
23 -> 24 ;
25 [label="sp_tempo_std <= 0.999\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
23 -> 25 ;
26 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
25 -> 26 ;
27 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
25 -> 27 ;
28 [label="sp_key_overlap_ratio <= -0.013\ngini = 0.727\nsamples = 17\nvalue = [0, 0, 6, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0, 0\n0, 0, 2, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
6 -> 28 ;
29 [label="sp_key_overlap_ratio <= -0.016\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#6aec9e"] ;
28 -> 29 ;
30 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
29 -> 30 ;
31 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
29 -> 31 ;
32 [label="sp_async_cor_onset <= -0.003\ngini = 0.694\nsamples = 12\nvalue = [0, 0, 6, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0, 0\n0, 0, 1, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#f5f3b0"] ;
28 -> 32 ;
33 [label="sp_async_delta <= 0.001\ngini = 0.519\nsamples = 9\nvalue = [0, 0, 6, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#efed83"] ;
32 -> 33 ;
34 [label="sp_async_cor_vel <= 0.009\ngini = 0.245\nsamples = 7\nvalue = [0, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e9e75a"] ;
33 -> 34 ;
35 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
34 -> 35 ;
36 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
34 -> 36 ;
37 [label="sp_key_overlap_ratio <= 0.015\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
33 -> 37 ;
38 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
37 -> 38 ;
39 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
37 -> 39 ;
40 [label="sp_duration_percentage <= 0.035\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Daniel Barenboim", fillcolor="#9cf2be"] ;
32 -> 40 ;
41 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
40 -> 41 ;
42 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
40 -> 42 ;
43 [label="sp_async_delta <= 0.0\ngini = 0.644\nsamples = 17\nvalue = [0, 0, 4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0\n0, 0, 2, 0, 9, 0, 0]\nclass = Radu Lupu", fillcolor="#f5b3d0"] ;
1 -> 43 ;
44 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
43 -> 44 ;
45 [label="sp_async_cor_onset <= -0.004\ngini = 0.56\nsamples = 15\nvalue = [0, 0, 4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 9, 0, 0]\nclass = Radu Lupu", fillcolor="#f3a5c8"] ;
43 -> 45 ;
46 [label="sp_async_cor_vel <= -0.002\ngini = 0.667\nsamples = 9\nvalue = [0, 0, 4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 3, 0, 0]\nclass = András Schiff", fillcolor="#fbfade"] ;
45 -> 46 ;
47 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 2, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
46 -> 47 ;
48 [label="sp_kor_repeated <= -0.011\ngini = 0.612\nsamples = 7\nvalue = [0, 0, 4, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
46 -> 48 ;
49 [label="sp_kor_repeated <= -0.019\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#ece96a"] ;
48 -> 49 ;
50 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
49 -> 50 ;
51 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
49 -> 51 ;
52 [label="sp_async_voice_std <= 0.002\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
48 -> 52 ;
53 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
52 -> 53 ;
54 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
52 -> 54 ;
55 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 6, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
45 -> 55 ;
56 [label="sp_key_overlap_ratio <= -0.004\ngini = 0.937\nsamples = 720\nvalue = [45, 44, 47, 53, 44, 22, 20, 25, 8, 36, 42, 12\n10, 24, 15, 79, 66, 62, 31, 18, 17]\nclass = Emil Gilels", fillcolor="#fdfbfe"] ;
0 -> 56 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
57 [label="sp_key_overlap_ratio <= -0.012\ngini = 0.926\nsamples = 352\nvalue = [19, 34, 29, 18, 21, 10, 9, 19, 7, 12, 23, 3, 4\n12, 5, 57, 24, 4, 23, 11, 8]\nclass = Emil Gilels", fillcolor="#f9f1fd"] ;
56 -> 57 ;
58 [label="sp_async_delta <= 0.002\ngini = 0.852\nsamples = 83\nvalue = [0, 3, 5, 2, 3, 1, 6, 5, 0, 7, 1, 1, 1, 2\n3, 27, 8, 0, 7, 1, 0]\nclass = Emil Gilels", fillcolor="#ebcdf8"] ;
57 -> 58 ;
59 [label="sp_async_voice_std <= 0.0\ngini = 0.713\nsamples = 44\nvalue = [0, 1, 5, 0, 2, 0, 4, 1, 0, 2, 0, 1, 0, 0\n0, 22, 4, 0, 2, 0, 0]\nclass = Emil Gilels", fillcolor="#dda9f4"] ;
58 -> 59 ;
60 [label="sp_duration_percentage <= 0.04\ngini = 0.858\nsamples = 23\nvalue = [0, 1, 3, 0, 1, 0, 4, 1, 0, 2, 0, 1, 0, 0\n0, 5, 4, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#fbf5fe"] ;
59 -> 60 ;
61 [label="sp_key_overlap_ratio <= -0.019\ngini = 0.821\nsamples = 18\nvalue = [0, 1, 3, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0\n0, 5, 4, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#f9f1fd"] ;
60 -> 61 ;
62 [label="sp_async_cor_vel <= 0.015\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#ec7bee"] ;
61 -> 62 ;
63 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
62 -> 63 ;
64 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
62 -> 64 ;
65 [label="sp_duration_percentage <= 0.023\ngini = 0.806\nsamples = 14\nvalue = [0, 1, 2, 0, 1, 0, 2, 1, 0, 0, 0, 0, 0, 0\n0, 5, 1, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#eccef8"] ;
61 -> 65 ;
66 [label="sp_async_cor_vel <= 0.006\ngini = 0.5\nsamples = 6\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 4, 0, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#d088ef"] ;
65 -> 66 ;
67 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
66 -> 67 ;
68 [label="sp_key_overlap_ratio <= -0.016\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 4, 0, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#c46aec"] ;
66 -> 68 ;
69 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
68 -> 69 ;
70 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 4, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
68 -> 70 ;
71 [label="sp_kor_repeated <= -0.03\ngini = 0.844\nsamples = 8\nvalue = [0, 1, 2, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0\n0, 1, 1, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#fbfbe3"] ;
65 -> 71 ;
72 [label="sp_async_cor_vel <= 0.003\ngini = 0.75\nsamples = 4\nvalue = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 1, 1, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
71 -> 72 ;
73 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
72 -> 73 ;
74 [label="sp_async_cor_vel <= 0.007\ngini = 0.667\nsamples = 3\nvalue = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
72 -> 74 ;
75 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
74 -> 75 ;
76 [label="sp_async_delta <= 0.0\ngini = 0.5\nsamples = 2\nvalue = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
74 -> 76 ;
77 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
76 -> 77 ;
78 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
76 -> 78 ;
79 [label="sp_key_overlap_ratio <= -0.013\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 2, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#f6f5bd"] ;
71 -> 79 ;
80 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
79 -> 80 ;
81 [label="sp_async_delta <= 0.001\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
79 -> 81 ;
82 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
81 -> 82 ;
83 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
81 -> 83 ;
84 [label="sp_key_overlap_ratio <= -0.013\ngini = 0.64\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
60 -> 84 ;
85 [label="sp_async_delta <= 0.0\ngini = 0.5\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
84 -> 85 ;
86 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
85 -> 86 ;
87 [label="sp_async_delta <= 0.001\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#9cf2a6"] ;
85 -> 87 ;
88 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
87 -> 88 ;
89 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
87 -> 89 ;
90 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
84 -> 90 ;
91 [label="sp_async_cor_onset <= 0.018\ngini = 0.331\nsamples = 21\nvalue = [0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 17, 0, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#c163ea"] ;
59 -> 91 ;
92 [label="sp_async_cor_vel <= 0.012\ngini = 0.694\nsamples = 7\nvalue = [0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#efd7fa"] ;
91 -> 92 ;
93 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
92 -> 93 ;
94 [label="sp_kor_repeated <= -0.057\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#f6f5bd"] ;
92 -> 94 ;
95 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
94 -> 95 ;
96 [label="sp_async_cor_vel <= 0.016\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
94 -> 96 ;
97 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
96 -> 97 ;
98 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
96 -> 98 ;
99 [label="gini = 0.0\nsamples = 14\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 14, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
91 -> 99 ;
100 [label="sp_async_voice_std <= 0.001\ngini = 0.91\nsamples = 39\nvalue = [0, 2, 0, 2, 1, 1, 2, 4, 0, 5, 1, 0, 1, 2\n3, 5, 4, 0, 5, 1, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
58 -> 100 ;
101 [label="sp_kor_repeated <= -0.048\ngini = 0.865\nsamples = 20\nvalue = [0, 2, 0, 1, 0, 0, 1, 3, 0, 1, 1, 0, 1, 0\n3, 0, 1, 0, 5, 1, 0]\nclass = Radu Lupu", fillcolor="#fce8f1"] ;
100 -> 101 ;
102 [label="sp_key_overlap_ratio <= -0.013\ngini = 0.449\nsamples = 7\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0\n0, 0, 0, 0, 5, 0, 0]\nclass = Radu Lupu", fillcolor="#ee7bae"] ;
101 -> 102 ;
103 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 5, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
102 -> 103 ;
104 [label="sp_async_cor_onset <= 0.067\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
102 -> 104 ;
105 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
104 -> 105 ;
106 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
104 -> 106 ;
107 [label="sp_async_voice_std <= 0.001\ngini = 0.84\nsamples = 13\nvalue = [0, 2, 0, 1, 0, 0, 1, 3, 0, 1, 0, 0, 0, 0\n3, 0, 1, 0, 0, 1, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
101 -> 107 ;
108 [label="sp_async_cor_vel <= 0.043\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#7beea9"] ;
107 -> 108 ;
109 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
108 -> 109 ;
110 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
108 -> 110 ;
111 [label="sp_async_delta <= 0.003\ngini = 0.79\nsamples = 9\nvalue = [0, 2, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0\n3, 0, 0, 0, 0, 1, 0]\nclass = Friedrich Gulda", fillcolor="#ede3fb"] ;
107 -> 111 ;
112 [label="sp_async_cor_onset <= 0.029\ngini = 0.735\nsamples = 7\nvalue = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0\n3, 0, 0, 0, 0, 1, 0]\nclass = Friedrich Gulda", fillcolor="#d4bdf6"] ;
111 -> 112 ;
113 [label="sp_key_overlap_ratio <= -0.025\ngini = 0.75\nsamples = 4\nvalue = [0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
112 -> 113 ;
114 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
113 -> 114 ;
115 [label="sp_async_voice_std <= 0.001\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
113 -> 115 ;
116 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
115 -> 116 ;
117 [label="sp_async_delta <= 0.002\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
115 -> 117 ;
118 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
117 -> 118 ;
119 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
117 -> 119 ;
120 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n3, 0, 0, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#7e39e5"] ;
112 -> 120 ;
121 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
111 -> 121 ;
122 [label="sp_async_delta <= 0.003\ngini = 0.837\nsamples = 19\nvalue = [0, 0, 0, 1, 1, 1, 1, 1, 0, 4, 0, 0, 0, 2\n0, 5, 3, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#faf2fd"] ;
100 -> 122 ;
123 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 4, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
122 -> 123 ;
124 [label="sp_tempo_std <= 0.99\ngini = 0.844\nsamples = 15\nvalue = [0, 0, 0, 1, 1, 1, 1, 1, 0, 4, 0, 0, 0, 2\n0, 1, 3, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#effdfd"] ;
122 -> 124 ;
125 [label="sp_kor_repeated <= -0.075\ngini = 0.843\nsamples = 11\nvalue = [0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 2\n0, 1, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#fce9fc"] ;
124 -> 125 ;
126 [label="sp_duration_percentage <= 0.113\ngini = 0.778\nsamples = 6\nvalue = [0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 2\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#dbd7fa"] ;
125 -> 126 ;
127 [label="sp_async_delta <= 0.008\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#a69cf2"] ;
126 -> 127 ;
128 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
127 -> 128 ;
129 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
127 -> 129 ;
130 [label="sp_duration_percentage <= 0.13\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
126 -> 130 ;
131 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
130 -> 131 ;
132 [label="sp_async_cor_onset <= 0.096\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
130 -> 132 ;
133 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
132 -> 133 ;
134 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
132 -> 134 ;
135 [label="sp_duration_percentage <= 0.062\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f09cf2"] ;
125 -> 135 ;
136 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
135 -> 136 ;
137 [label="sp_kor_repeated <= -0.058\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#ec7bee"] ;
135 -> 137 ;
138 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 3, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
137 -> 138 ;
139 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
137 -> 139 ;
140 [label="sp_async_cor_vel <= 0.025\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#7beeec"] ;
124 -> 140 ;
141 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
140 -> 141 ;
142 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
140 -> 142 ;
143 [label="sp_async_cor_vel <= 0.004\ngini = 0.93\nsamples = 269\nvalue = [19, 31, 24, 16, 18, 9, 3, 14, 7, 5, 22, 2, 3\n10, 2, 30, 16, 4, 16, 10, 8]\nclass = Vladimir Ashkenazy", fillcolor="#fffffe"] ;
57 -> 143 ;
144 [label="sp_async_delta <= 0.001\ngini = 0.832\nsamples = 31\nvalue = [0, 0, 2, 0, 0, 0, 0, 7, 0, 0, 5, 0, 0, 5\n0, 2, 2, 1, 7, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
143 -> 144 ;
145 [label="sp_async_cor_onset <= 0.003\ngini = 0.819\nsamples = 25\nvalue = [0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 5\n0, 2, 2, 1, 7, 0, 0]\nclass = Radu Lupu", fillcolor="#fcebf3"] ;
144 -> 145 ;
146 [label="sp_duration_percentage <= 0.016\ngini = 0.785\nsamples = 20\nvalue = [0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 1\n0, 1, 2, 1, 7, 0, 0]\nclass = Radu Lupu", fillcolor="#fce5ef"] ;
145 -> 146 ;
147 [label="sp_tempo_std <= 1.0\ngini = 0.562\nsamples = 8\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 1\n0, 1, 0, 0, 1, 0, 0]\nclass = Glenn Gould", fillcolor="#8ed6f0"] ;
146 -> 147 ;
148 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
147 -> 148 ;
149 [label="sp_key_overlap_ratio <= -0.005\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 1, 0, 0, 1, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#ffffff"] ;
147 -> 149 ;
150 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
149 -> 150 ;
151 [label="sp_kor_repeated <= -0.01\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Emil Gilels", fillcolor="#ffffff"] ;
149 -> 151 ;
152 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
151 -> 152 ;
153 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
151 -> 153 ;
154 [label="sp_async_cor_vel <= 0.003\ngini = 0.681\nsamples = 12\nvalue = [0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 2, 1, 6, 0, 0]\nclass = Radu Lupu", fillcolor="#f5b0cf"] ;
146 -> 154 ;
155 [label="sp_duration_percentage <= 0.019\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = András Schiff", fillcolor="#f6f5bd"] ;
154 -> 155 ;
156 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
155 -> 156 ;
157 [label="sp_async_cor_onset <= 0.002\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#ffffff"] ;
155 -> 157 ;
158 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
157 -> 158 ;
159 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
157 -> 159 ;
160 [label="sp_duration_percentage <= 0.017\ngini = 0.406\nsamples = 8\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 6, 0, 0]\nclass = Radu Lupu", fillcolor="#ec72a9"] ;
154 -> 160 ;
161 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
160 -> 161 ;
162 [label="sp_async_cor_onset <= -0.001\ngini = 0.245\nsamples = 7\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 6, 0, 0]\nclass = Radu Lupu", fillcolor="#e95a9a"] ;
160 -> 162 ;
163 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
162 -> 163 ;
164 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 6, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
162 -> 164 ;
165 [label="sp_async_delta <= 0.001\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4\n0, 1, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#796aec"] ;
145 -> 165 ;
166 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
165 -> 166 ;
167 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
165 -> 167 ;
168 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
144 -> 168 ;
169 [label="sp_kor_repeated <= -0.017\ngini = 0.926\nsamples = 238\nvalue = [19, 31, 22, 16, 18, 9, 3, 7, 7, 5, 17, 2, 3\n5, 2, 28, 14, 3, 9, 10, 8]\nclass = Vladimir Ashkenazy", fillcolor="#fffefc"] ;
143 -> 169 ;
170 [label="sp_async_cor_onset <= 0.009\ngini = 0.924\nsamples = 117\nvalue = [4, 17, 13, 12, 6, 3, 2, 4, 4, 3, 7, 1, 0, 3\n2, 5, 11, 1, 8, 6, 5]\nclass = Vladimir Ashkenazy", fillcolor="#fefcf7"] ;
169 -> 170 ;
171 [label="sp_async_cor_vel <= 0.007\ngini = 0.746\nsamples = 25\nvalue = [0, 0, 9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1\n2, 0, 6, 0, 6, 0, 0]\nclass = András Schiff", fillcolor="#fbfae0"] ;
170 -> 171 ;
172 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 4, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
171 -> 172 ;
173 [label="sp_async_cor_onset <= 0.005\ngini = 0.712\nsamples = 21\nvalue = [0, 0, 9, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1\n2, 0, 6, 0, 2, 0, 0]\nclass = András Schiff", fillcolor="#faf9d7"] ;
171 -> 173 ;
174 [label="sp_async_delta <= 0.001\ngini = 0.595\nsamples = 11\nvalue = [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n2, 0, 6, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f4b5f5"] ;
173 -> 174 ;
175 [label="sp_async_cor_vel <= 0.01\ngini = 0.444\nsamples = 9\nvalue = [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 6, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f09cf2"] ;
174 -> 175 ;
176 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
175 -> 176 ;
177 [label="sp_duration_percentage <= 0.05\ngini = 0.48\nsamples = 5\nvalue = [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#f6f5bd"] ;
175 -> 177 ;
178 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
177 -> 178 ;
179 [label="sp_async_delta <= 0.001\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f09cf2"] ;
177 -> 179 ;
180 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
179 -> 180 ;
181 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
179 -> 181 ;
182 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n2, 0, 0, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#7e39e5"] ;
174 -> 182 ;
183 [label="sp_tempo_std <= 0.999\ngini = 0.58\nsamples = 10\nvalue = [0, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 2, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
173 -> 183 ;
184 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
183 -> 184 ;
185 [label="sp_async_delta <= 0.0\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 2, 0, 0]\nclass = Radu Lupu", fillcolor="#f6bdd7"] ;
183 -> 185 ;
186 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 2, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
185 -> 186 ;
187 [label="sp_async_voice_std <= 0.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
185 -> 187 ;
188 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
187 -> 188 ;
189 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
187 -> 189 ;
190 [label="sp_duration_percentage <= 0.022\ngini = 0.916\nsamples = 92\nvalue = [4, 17, 4, 12, 5, 3, 2, 4, 4, 3, 7, 1, 0, 2\n0, 5, 5, 1, 2, 6, 5]\nclass = Vladimir Ashkenazy", fillcolor="#fdfaf3"] ;
170 -> 190 ;
191 [label="sp_duration_percentage <= 0.016\ngini = 0.219\nsamples = 8\nvalue = [0, 7, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e9bc55"] ;
190 -> 191 ;
192 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
191 -> 192 ;
193 [label="gini = 0.0\nsamples = 7\nvalue = [0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
191 -> 193 ;
194 [label="sp_kor_repeated <= -0.018\ngini = 0.927\nsamples = 84\nvalue = [4, 10, 4, 12, 5, 3, 2, 4, 3, 3, 7, 1, 0, 2\n0, 5, 5, 1, 2, 6, 5]\nclass = Vladimir Horowitz", fillcolor="#fdfefa"] ;
190 -> 194 ;
195 [label="sp_async_voice_std <= 0.0\ngini = 0.926\nsamples = 75\nvalue = [1, 10, 2, 9, 5, 3, 2, 4, 3, 3, 7, 1, 0, 2\n0, 4, 5, 1, 2, 6, 5]\nclass = Vladimir Ashkenazy", fillcolor="#fffefc"] ;
194 -> 195 ;
196 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 2]\nclass = Lang Lang", fillcolor="#e54d39"] ;
195 -> 196 ;
197 [label="sp_async_voice_std <= 0.0\ngini = 0.924\nsamples = 73\nvalue = [1, 10, 2, 9, 5, 3, 2, 4, 3, 3, 7, 1, 0, 2\n0, 4, 5, 1, 2, 6, 3]\nclass = Vladimir Ashkenazy", fillcolor="#fffefc"] ;
195 -> 197 ;
198 [label="sp_kor_repeated <= -0.024\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 3, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#9cdbf2"] ;
197 -> 198 ;
199 [label="sp_async_voice_std <= 0.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#ffffff"] ;
198 -> 199 ;
200 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
199 -> 200 ;
201 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
199 -> 201 ;
202 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
198 -> 202 ;
203 [label="sp_tempo_std <= 0.999\ngini = 0.923\nsamples = 68\nvalue = [1, 10, 2, 9, 5, 2, 2, 3, 3, 3, 4, 1, 0, 2\n0, 4, 5, 1, 2, 6, 3]\nclass = Vladimir Ashkenazy", fillcolor="#fffefc"] ;
197 -> 203 ;
204 [label="sp_async_delta <= 0.003\ngini = 0.925\nsamples = 63\nvalue = [1, 10, 2, 6, 4, 2, 2, 3, 2, 3, 4, 1, 0, 2\n0, 4, 5, 1, 2, 6, 3]\nclass = Vladimir Ashkenazy", fillcolor="#fdfaf1"] ;
203 -> 204 ;
205 [label="sp_async_cor_onset <= 0.01\ngini = 0.915\nsamples = 55\nvalue = [1, 9, 2, 6, 1, 1, 1, 3, 2, 3, 4, 0, 0, 2\n0, 4, 5, 0, 2, 6, 3]\nclass = Vladimir Ashkenazy", fillcolor="#fdfaf3"] ;
204 -> 205 ;
206 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 2, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
205 -> 206 ;
207 [label="sp_duration_percentage <= 0.035\ngini = 0.916\nsamples = 53\nvalue = [1, 9, 2, 6, 1, 1, 1, 3, 2, 3, 4, 0, 0, 2\n0, 4, 5, 0, 2, 4, 3]\nclass = Vladimir Ashkenazy", fillcolor="#fdfaf2"] ;
205 -> 207 ;
208 [label="sp_async_voice_std <= 0.0\ngini = 0.866\nsamples = 23\nvalue = [1, 6, 1, 2, 0, 1, 0, 0, 1, 2, 1, 0, 0, 2\n0, 4, 1, 0, 1, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#fcf7ea"] ;
207 -> 208 ;
209 [label="sp_async_cor_vel <= 0.018\ngini = 0.858\nsamples = 17\nvalue = [1, 5, 1, 2, 0, 1, 0, 0, 1, 2, 1, 0, 0, 1\n0, 0, 1, 0, 1, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#faefd7"] ;
208 -> 209 ;
210 [label="sp_kor_repeated <= -0.024\ngini = 0.875\nsamples = 8\nvalue = [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1\n0, 0, 1, 0, 1, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
209 -> 210 ;
211 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
210 -> 211 ;
212 [label="sp_async_delta <= 0.0\ngini = 0.857\nsamples = 7\nvalue = [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1\n0, 0, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
210 -> 212 ;
213 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
212 -> 213 ;
214 [label="sp_async_voice_std <= 0.0\ngini = 0.833\nsamples = 6\nvalue = [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1\n0, 0, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
212 -> 214 ;
215 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
214 -> 215 ;
216 [label="sp_kor_repeated <= -0.02\ngini = 0.8\nsamples = 5\nvalue = [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
214 -> 216 ;
217 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
216 -> 217 ;
218 [label="sp_async_cor_vel <= 0.013\ngini = 0.75\nsamples = 4\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
216 -> 218 ;
219 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
218 -> 219 ;
220 [label="sp_kor_repeated <= -0.019\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#ffffff"] ;
218 -> 220 ;
221 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
220 -> 221 ;
222 [label="sp_key_overlap_ratio <= -0.009\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#ffffff"] ;
220 -> 222 ;
223 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
222 -> 223 ;
224 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
222 -> 224 ;
225 [label="sp_async_delta <= 0.0\ngini = 0.593\nsamples = 9\nvalue = [0, 5, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#f4deaa"] ;
209 -> 225 ;
226 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
225 -> 226 ;
227 [label="sp_async_voice_std <= 0.0\ngini = 0.408\nsamples = 7\nvalue = [0, 5, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#efd088"] ;
225 -> 227 ;
228 [label="gini = 0.0\nsamples = 5\nvalue = [0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
227 -> 228 ;
229 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
227 -> 229 ;
230 [label="sp_async_cor_onset <= 0.025\ngini = 0.5\nsamples = 6\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 4, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#d088ef"] ;
208 -> 230 ;
231 [label="sp_async_voice_std <= 0.0\ngini = 0.32\nsamples = 5\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 4, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#c46aec"] ;
230 -> 231 ;
232 [label="sp_duration_percentage <= 0.03\ngini = 0.5\nsamples = 2\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
231 -> 232 ;
233 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
232 -> 233 ;
234 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
232 -> 234 ;
235 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
231 -> 235 ;
236 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
230 -> 236 ;
237 [label="sp_async_voice_std <= 0.0\ngini = 0.9\nsamples = 30\nvalue = [0, 3, 1, 4, 1, 0, 1, 3, 1, 1, 3, 0, 0, 0\n0, 0, 4, 0, 1, 4, 3]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
207 -> 237 ;
238 [label="sp_async_cor_onset <= 0.025\ngini = 0.75\nsamples = 8\nvalue = [0, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 3]\nclass = Lang Lang", fillcolor="#fbe1de"] ;
237 -> 238 ;
239 [label="sp_async_delta <= 0.001\ngini = 0.72\nsamples = 5\nvalue = [0, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Vladimir Horowitz", fillcolor="#edf8ce"] ;
238 -> 239 ;
240 [label="sp_async_cor_vel <= 0.02\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
239 -> 240 ;
241 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
240 -> 241 ;
242 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
240 -> 242 ;
243 [label="sp_tempo_std <= 0.999\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Vladimir Horowitz", fillcolor="#dbf29c"] ;
239 -> 243 ;
244 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
243 -> 244 ;
245 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
243 -> 245 ;
246 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 3]\nclass = Lang Lang", fillcolor="#e54d39"] ;
238 -> 246 ;
247 [label="sp_async_delta <= 0.002\ngini = 0.884\nsamples = 22\nvalue = [0, 3, 1, 2, 0, 0, 1, 2, 1, 1, 3, 0, 0, 0\n0, 0, 4, 0, 1, 3, 0]\nclass = Zoltán Kocsis", fillcolor="#fdf5fe"] ;
237 -> 247 ;
248 [label="sp_kor_repeated <= -0.024\ngini = 0.612\nsamples = 7\nvalue = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f09cf2"] ;
247 -> 248 ;
249 [label="sp_duration_percentage <= 0.048\ngini = 0.5\nsamples = 6\nvalue = [0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#ee88ef"] ;
248 -> 249 ;
250 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
249 -> 250 ;
251 [label="sp_async_voice_std <= 0.001\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e96aec"] ;
249 -> 251 ;
252 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
251 -> 252 ;
253 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
251 -> 253 ;
254 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
248 -> 254 ;
255 [label="sp_async_cor_vel <= 0.03\ngini = 0.853\nsamples = 15\nvalue = [0, 3, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 0, 0\n0, 0, 0, 0, 1, 3, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
247 -> 255 ;
256 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
255 -> 256 ;
257 [label="sp_async_delta <= 0.002\ngini = 0.828\nsamples = 13\nvalue = [0, 3, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0\n0, 0, 0, 0, 1, 3, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
255 -> 257 ;
258 [label="sp_key_overlap_ratio <= -0.01\ngini = 0.444\nsamples = 3\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#f2d89c"] ;
257 -> 258 ;
259 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
258 -> 259 ;
260 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
258 -> 260 ;
261 [label="sp_async_delta <= 0.003\ngini = 0.8\nsamples = 10\nvalue = [0, 1, 0, 2, 0, 0, 0, 0, 1, 1, 2, 0, 0, 0\n0, 0, 0, 0, 0, 3, 0]\nclass = Murray Perahia", fillcolor="#fce6ea"] ;
257 -> 261 ;
262 [label="sp_async_cor_vel <= 0.035\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 3, 0]\nclass = Murray Perahia", fillcolor="#f29caa"] ;
261 -> 262 ;
263 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
262 -> 263 ;
264 [label="sp_async_cor_vel <= 0.067\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 3, 0]\nclass = Murray Perahia", fillcolor="#ee7b8e"] ;
262 -> 264 ;
265 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 3, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
264 -> 265 ;
266 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
264 -> 266 ;
267 [label="sp_key_overlap_ratio <= -0.008\ngini = 0.72\nsamples = 5\nvalue = [0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#ceedf8"] ;
261 -> 267 ;
268 [label="sp_kor_repeated <= -0.028\ngini = 0.5\nsamples = 2\nvalue = [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
267 -> 268 ;
269 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
268 -> 269 ;
270 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
268 -> 270 ;
271 [label="sp_async_cor_onset <= 0.029\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#9cdbf2"] ;
267 -> 271 ;
272 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
271 -> 272 ;
273 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
271 -> 273 ;
274 [label="sp_key_overlap_ratio <= -0.011\ngini = 0.781\nsamples = 8\nvalue = [0, 1, 0, 0, 3, 1, 1, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#dcf8c6"] ;
204 -> 274 ;
275 [label="sp_kor_repeated <= -0.029\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#ffffff"] ;
274 -> 275 ;
276 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
275 -> 276 ;
277 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
275 -> 277 ;
278 [label="sp_async_delta <= 0.004\ngini = 0.667\nsamples = 6\nvalue = [0, 1, 0, 0, 3, 0, 1, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#cff5b0"] ;
274 -> 278 ;
279 [label="sp_async_cor_onset <= 0.099\ngini = 0.56\nsamples = 5\nvalue = [0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#c2f29c"] ;
278 -> 279 ;
280 [label="sp_async_voice_std <= 0.001\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#aeee7b"] ;
279 -> 280 ;
281 [label="sp_async_cor_onset <= 0.053\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
280 -> 281 ;
282 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
281 -> 282 ;
283 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
281 -> 283 ;
284 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
280 -> 284 ;
285 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
279 -> 285 ;
286 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
278 -> 286 ;
287 [label="sp_tempo_std <= 0.999\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 3, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#dbf29c"] ;
203 -> 287 ;
288 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
287 -> 288 ;
289 [label="sp_async_cor_vel <= 0.013\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
287 -> 289 ;
290 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
289 -> 290 ;
291 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
289 -> 291 ;
292 [label="sp_async_cor_onset <= 0.011\ngini = 0.716\nsamples = 9\nvalue = [3, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
194 -> 292 ;
293 [label="sp_async_delta <= 0.001\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
292 -> 293 ;
294 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
293 -> 294 ;
295 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
293 -> 295 ;
296 [label="sp_duration_percentage <= 0.037\ngini = 0.5\nsamples = 6\nvalue = [3, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
292 -> 296 ;
297 [label="sp_async_cor_onset <= 0.012\ngini = 0.375\nsamples = 4\nvalue = [1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#cfee7b"] ;
296 -> 297 ;
298 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
297 -> 298 ;
299 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
297 -> 299 ;
300 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
296 -> 300 ;
301 [label="sp_async_voice_std <= 0.0\ngini = 0.904\nsamples = 121\nvalue = [15, 14, 9, 4, 12, 6, 1, 3, 3, 2, 10, 1, 3, 2\n0, 23, 3, 2, 1, 4, 3]\nclass = Emil Gilels", fillcolor="#f9f0fd"] ;
169 -> 301 ;
302 [label="sp_duration_percentage <= 0.025\ngini = 0.91\nsamples = 97\nvalue = [14, 10, 8, 4, 12, 6, 1, 3, 2, 2, 10, 1, 3, 1\n0, 12, 3, 0, 1, 3, 1]\nclass = Sviatoslav Richter", fillcolor="#fefcfa"] ;
301 -> 302 ;
303 [label="sp_async_voice_std <= 0.0\ngini = 0.91\nsamples = 86\nvalue = [9, 10, 8, 4, 12, 6, 1, 3, 2, 2, 6, 1, 2, 1\n0, 12, 3, 0, 1, 3, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
302 -> 303 ;
304 [label="sp_tempo_std <= 1.0\ngini = 0.907\nsamples = 84\nvalue = [9, 10, 8, 4, 12, 6, 1, 3, 2, 2, 6, 1, 2, 1\n0, 12, 1, 0, 1, 3, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
303 -> 304 ;
305 [label="sp_async_cor_vel <= 0.007\ngini = 0.904\nsamples = 82\nvalue = [9, 10, 8, 2, 12, 6, 1, 3, 2, 2, 6, 1, 2, 1\n0, 12, 1, 0, 1, 3, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
304 -> 305 ;
306 [label="sp_async_voice_std <= 0.0\ngini = 0.873\nsamples = 35\nvalue = [6, 3, 2, 0, 1, 4, 1, 2, 0, 0, 4, 0, 1, 1\n0, 8, 1, 0, 0, 1, 0]\nclass = Emil Gilels", fillcolor="#faf1fd"] ;
305 -> 306 ;
307 [label="sp_kor_repeated <= -0.011\ngini = 0.694\nsamples = 7\nvalue = [0, 2, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#ddfad7"] ;
306 -> 307 ;
308 [label="sp_duration_percentage <= 0.015\ngini = 0.625\nsamples = 4\nvalue = [0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#f6e5bd"] ;
307 -> 308 ;
309 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
308 -> 309 ;
310 [label="sp_key_overlap_ratio <= -0.007\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
308 -> 310 ;
311 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
310 -> 311 ;
312 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
310 -> 312 ;
313 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
307 -> 313 ;
314 [label="sp_duration_percentage <= 0.022\ngini = 0.837\nsamples = 28\nvalue = [6, 1, 1, 0, 1, 1, 1, 2, 0, 0, 4, 0, 0, 1\n0, 8, 1, 0, 0, 1, 0]\nclass = Emil Gilels", fillcolor="#f8edfd"] ;
306 -> 314 ;
315 [label="sp_kor_repeated <= -0.014\ngini = 0.817\nsamples = 26\nvalue = [6, 1, 1, 0, 1, 1, 1, 0, 0, 0, 4, 0, 0, 1\n0, 8, 1, 0, 0, 1, 0]\nclass = Emil Gilels", fillcolor="#f7ebfc"] ;
314 -> 315 ;
316 [label="sp_async_cor_vel <= 0.006\ngini = 0.741\nsamples = 9\nvalue = [1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 1, 0, 0, 0, 1, 0]\nclass = Glenn Gould", fillcolor="#b5e4f5"] ;
315 -> 316 ;
317 [label="sp_key_overlap_ratio <= -0.008\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#6ac9ec"] ;
316 -> 317 ;
318 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
317 -> 318 ;
319 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
317 -> 319 ;
320 [label="sp_async_delta <= 0.0\ngini = 0.75\nsamples = 4\nvalue = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 1, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
316 -> 320 ;
321 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
320 -> 321 ;
322 [label="sp_tempo_std <= 1.0\ngini = 0.667\nsamples = 3\nvalue = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
320 -> 322 ;
323 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
322 -> 323 ;
324 [label="sp_async_cor_vel <= 0.006\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
322 -> 324 ;
325 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
324 -> 325 ;
326 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
324 -> 326 ;
327 [label="sp_kor_repeated <= -0.013\ngini = 0.727\nsamples = 17\nvalue = [5, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1\n0, 7, 1, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#f2defb"] ;
315 -> 327 ;
328 [label="sp_async_voice_std <= 0.0\ngini = 0.278\nsamples = 6\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 5, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#c161ea"] ;
327 -> 328 ;
329 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
328 -> 329 ;
330 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 5, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
328 -> 330 ;
331 [label="sp_duration_percentage <= 0.015\ngini = 0.727\nsamples = 11\nvalue = [5, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1\n0, 2, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#f6d5bd"] ;
327 -> 331 ;
332 [label="sp_async_voice_std <= 0.0\ngini = 0.75\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1\n0, 1, 1, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#ffffff"] ;
331 -> 332 ;
333 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
332 -> 333 ;
334 [label="sp_kor_repeated <= -0.011\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 1, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#ffffff"] ;
332 -> 334 ;
335 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
334 -> 335 ;
336 [label="sp_async_cor_onset <= 0.004\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 1, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#ffffff"] ;
334 -> 336 ;
337 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
336 -> 337 ;
338 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
336 -> 338 ;
339 [label="sp_async_delta <= 0.0\ngini = 0.449\nsamples = 7\nvalue = [5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#eeab7b"] ;
331 -> 339 ;
340 [label="gini = 0.0\nsamples = 5\nvalue = [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
339 -> 340 ;
341 [label="sp_async_cor_onset <= 0.003\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
339 -> 341 ;
342 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
341 -> 342 ;
343 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
341 -> 343 ;
344 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
314 -> 344 ;
345 [label="sp_tempo_std <= 1.0\ngini = 0.883\nsamples = 47\nvalue = [3, 7, 6, 2, 11, 2, 0, 1, 2, 2, 2, 1, 1, 0\n0, 4, 0, 0, 1, 2, 0]\nclass = Walter Gieseking", fillcolor="#f3fceb"] ;
305 -> 345 ;
346 [label="sp_async_voice_std <= 0.0\ngini = 0.913\nsamples = 35\nvalue = [3, 5, 4, 2, 4, 2, 0, 1, 1, 2, 2, 1, 1, 0\n0, 4, 0, 0, 1, 2, 0]\nclass = Vladimir Ashkenazy", fillcolor="#fefcf9"] ;
345 -> 346 ;
347 [label="sp_kor_repeated <= -0.011\ngini = 0.905\nsamples = 33\nvalue = [3, 5, 4, 0, 4, 2, 0, 1, 1, 2, 2, 1, 1, 0\n0, 4, 0, 0, 1, 2, 0]\nclass = Vladimir Ashkenazy", fillcolor="#fefcf8"] ;
346 -> 347 ;
348 [label="sp_duration_percentage <= 0.017\ngini = 0.905\nsamples = 31\nvalue = [3, 5, 4, 0, 4, 2, 0, 1, 1, 2, 2, 1, 1, 0\n0, 2, 0, 0, 1, 2, 0]\nclass = Vladimir Ashkenazy", fillcolor="#fefcf8"] ;
347 -> 348 ;
349 [label="sp_key_overlap_ratio <= -0.006\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
348 -> 349 ;
350 [label="sp_duration_percentage <= 0.017\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
349 -> 350 ;
351 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
350 -> 351 ;
352 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
350 -> 352 ;
353 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
349 -> 353 ;
354 [label="sp_duration_percentage <= 0.018\ngini = 0.893\nsamples = 26\nvalue = [3, 5, 1, 0, 4, 2, 0, 1, 1, 2, 1, 0, 1, 0\n0, 2, 0, 0, 1, 2, 0]\nclass = Vladimir Ashkenazy", fillcolor="#fefbf6"] ;
348 -> 354 ;
355 [label="sp_kor_repeated <= -0.014\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 2, 0]\nclass = Murray Perahia", fillcolor="#f29caa"] ;
354 -> 355 ;
356 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
355 -> 356 ;
357 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 2, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
355 -> 357 ;
358 [label="sp_kor_repeated <= -0.013\ngini = 0.877\nsamples = 23\nvalue = [3, 5, 1, 0, 4, 2, 0, 1, 1, 1, 1, 0, 1, 0\n0, 2, 0, 0, 1, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#fefbf5"] ;
354 -> 358 ;
359 [label="sp_async_delta <= 0.001\ngini = 0.865\nsamples = 20\nvalue = [1, 5, 1, 0, 4, 1, 0, 1, 1, 1, 1, 0, 1, 0\n0, 2, 0, 0, 1, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#fdfaf3"] ;
358 -> 359 ;
360 [label="sp_async_voice_std <= 0.0\ngini = 0.883\nsamples = 18\nvalue = [1, 3, 1, 0, 4, 1, 0, 1, 1, 1, 1, 0, 1, 0\n0, 2, 0, 0, 1, 0, 0]\nclass = Walter Gieseking", fillcolor="#f7fdf2"] ;
359 -> 360 ;
361 [label="sp_kor_repeated <= -0.016\ngini = 0.86\nsamples = 11\nvalue = [1, 3, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#faefd7"] ;
360 -> 361 ;
362 [label="sp_tempo_std <= 0.999\ngini = 0.735\nsamples = 7\nvalue = [1, 3, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#f6e5bd"] ;
361 -> 362 ;
363 [label="sp_async_cor_vel <= 0.013\ngini = 0.75\nsamples = 4\nvalue = [1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
362 -> 363 ;
364 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
363 -> 364 ;
365 [label="sp_kor_repeated <= -0.017\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
363 -> 365 ;
366 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
365 -> 366 ;
367 [label="sp_async_voice_std <= 0.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
365 -> 367 ;
368 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
367 -> 368 ;
369 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
367 -> 369 ;
370 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
362 -> 370 ;
371 [label="sp_async_delta <= 0.0\ngini = 0.75\nsamples = 4\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
361 -> 371 ;
372 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
371 -> 372 ;
373 [label="sp_kor_repeated <= -0.015\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
371 -> 373 ;
374 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
373 -> 374 ;
375 [label="sp_tempo_std <= 1.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#ffffff"] ;
373 -> 375 ;
376 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
375 -> 376 ;
377 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
375 -> 377 ;
378 [label="sp_kor_repeated <= -0.016\ngini = 0.694\nsamples = 7\nvalue = [0, 0, 0, 0, 3, 0, 0, 1, 0, 1, 0, 0, 0, 0\n0, 2, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#e7fad7"] ;
360 -> 378 ;
379 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
378 -> 379 ;
380 [label="sp_key_overlap_ratio <= -0.007\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 0, 3, 0, 0, 1, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#c2f29c"] ;
378 -> 380 ;
381 [label="sp_async_cor_vel <= 0.01\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
380 -> 381 ;
382 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
381 -> 382 ;
383 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
381 -> 383 ;
384 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
380 -> 384 ;
385 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
359 -> 385 ;
386 [label="sp_kor_repeated <= -0.013\ngini = 0.444\nsamples = 3\nvalue = [2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#f2c09c"] ;
358 -> 386 ;
387 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
386 -> 387 ;
388 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
386 -> 388 ;
389 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
347 -> 389 ;
390 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
346 -> 390 ;
391 [label="sp_async_voice_std <= 0.0\ngini = 0.597\nsamples = 12\nvalue = [0, 2, 2, 0, 7, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#c2f29c"] ;
345 -> 391 ;
392 [label="sp_async_cor_vel <= 0.008\ngini = 0.735\nsamples = 7\nvalue = [0, 2, 2, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
391 -> 392 ;
393 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
392 -> 393 ;
394 [label="sp_kor_repeated <= -0.012\ngini = 0.64\nsamples = 5\nvalue = [0, 2, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
392 -> 394 ;
395 [label="sp_async_cor_vel <= 0.008\ngini = 0.444\nsamples = 3\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#f2d89c"] ;
394 -> 395 ;
396 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
395 -> 396 ;
397 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
395 -> 397 ;
398 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
394 -> 398 ;
399 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
391 -> 399 ;
400 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
304 -> 400 ;
401 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
303 -> 401 ;
402 [label="sp_async_delta <= 0.0\ngini = 0.645\nsamples = 11\nvalue = [5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Sviatoslav Richter", fillcolor="#fbede3"] ;
302 -> 402 ;
403 [label="sp_kor_repeated <= -0.015\ngini = 0.5\nsamples = 6\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Glenn Gould", fillcolor="#88d4ef"] ;
402 -> 403 ;
404 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
403 -> 404 ;
405 [label="sp_key_overlap_ratio <= -0.006\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
403 -> 405 ;
406 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
405 -> 406 ;
407 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Lang Lang", fillcolor="#e54d39"] ;
405 -> 407 ;
408 [label="sp_kor_repeated <= -0.016\ngini = 0.32\nsamples = 5\nvalue = [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#eca06a"] ;
402 -> 408 ;
409 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
408 -> 409 ;
410 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
408 -> 410 ;
411 [label="sp_async_cor_onset <= 0.012\ngini = 0.74\nsamples = 24\nvalue = [1, 4, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1\n0, 11, 0, 2, 0, 1, 2]\nclass = Emil Gilels", fillcolor="#e4baf6"] ;
301 -> 411 ;
412 [label="sp_kor_repeated <= -0.013\ngini = 0.844\nsamples = 15\nvalue = [1, 4, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1\n0, 3, 0, 2, 0, 1, 1]\nclass = Vladimir Ashkenazy", fillcolor="#fdf9ef"] ;
411 -> 412 ;
413 [label="sp_async_cor_vel <= 0.01\ngini = 0.815\nsamples = 9\nvalue = [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 3, 0, 1, 0, 1, 1]\nclass = Emil Gilels", fillcolor="#eccef8"] ;
412 -> 413 ;
414 [label="sp_async_voice_std <= 0.001\ngini = 0.56\nsamples = 5\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 0, 0, 1, 0]\nclass = Emil Gilels", fillcolor="#d89cf2"] ;
413 -> 414 ;
415 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
414 -> 415 ;
416 [label="sp_key_overlap_ratio <= -0.009\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
414 -> 416 ;
417 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
416 -> 417 ;
418 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
416 -> 418 ;
419 [label="sp_async_voice_std <= 0.0\ngini = 0.75\nsamples = 4\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 1, 0, 0, 1]\nclass = András Schiff", fillcolor="#ffffff"] ;
413 -> 419 ;
420 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Lang Lang", fillcolor="#e54d39"] ;
419 -> 420 ;
421 [label="sp_duration_percentage <= 0.03\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 1, 0, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
419 -> 421 ;
422 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
421 -> 422 ;
423 [label="sp_kor_repeated <= -0.017\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
421 -> 423 ;
424 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
423 -> 424 ;
425 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
423 -> 425 ;
426 [label="sp_async_voice_std <= 0.001\ngini = 0.5\nsamples = 6\nvalue = [0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#efd088"] ;
412 -> 426 ;
427 [label="gini = 0.0\nsamples = 4\nvalue = [0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
426 -> 427 ;
428 [label="sp_async_cor_vel <= 0.007\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#ffffff"] ;
426 -> 428 ;
429 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
428 -> 429 ;
430 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
428 -> 430 ;
431 [label="sp_async_cor_onset <= 0.022\ngini = 0.198\nsamples = 9\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 8, 0, 0, 0, 0, 1]\nclass = Emil Gilels", fillcolor="#bb52e8"] ;
411 -> 431 ;
432 [label="gini = 0.0\nsamples = 8\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 8, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
431 -> 432 ;
433 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Lang Lang", fillcolor="#e54d39"] ;
431 -> 433 ;
434 [label="sp_async_delta <= 0.005\ngini = 0.924\nsamples = 368\nvalue = [26, 10, 18, 35, 23, 12, 11, 6, 1, 24, 19, 9, 6\n12, 10, 22, 42, 58, 8, 7, 9]\nclass = Samson François", fillcolor="#fef5fb"] ;
56 -> 434 ;
435 [label="sp_kor_repeated <= -0.007\ngini = 0.929\nsamples = 344\nvalue = [25, 10, 18, 32, 23, 12, 11, 6, 1, 24, 17, 8, 5\n12, 10, 22, 42, 43, 8, 6, 9]\nclass = Samson François", fillcolor="#fffeff"] ;
434 -> 435 ;
436 [label="sp_async_cor_onset <= 0.003\ngini = 0.925\nsamples = 270\nvalue = [23, 10, 16, 31, 22, 11, 8, 5, 1, 8, 13, 8, 4\n9, 5, 17, 40, 22, 5, 5, 7]\nclass = Zoltán Kocsis", fillcolor="#fef8fe"] ;
435 -> 436 ;
437 [label="sp_duration_percentage <= 0.019\ngini = 0.854\nsamples = 61\nvalue = [1, 0, 7, 4, 2, 0, 2, 1, 0, 6, 2, 0, 1, 0\n5, 8, 18, 4, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#fadafa"] ;
436 -> 437 ;
438 [label="sp_key_overlap_ratio <= -0.002\ngini = 0.834\nsamples = 28\nvalue = [1, 0, 1, 3, 0, 0, 2, 1, 0, 1, 2, 0, 0, 0\n0, 8, 6, 3, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#f8edfd"] ;
437 -> 438 ;
439 [label="sp_async_voice_std <= 0.0\ngini = 0.847\nsamples = 23\nvalue = [1, 0, 0, 3, 0, 0, 2, 1, 0, 1, 2, 0, 0, 0\n0, 4, 6, 3, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#fceafc"] ;
438 -> 439 ;
440 [label="sp_async_cor_vel <= 0.002\ngini = 0.625\nsamples = 4\nvalue = [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#bdf6c4"] ;
439 -> 440 ;
441 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
440 -> 441 ;
442 [label="sp_async_voice_std <= 0.0\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
440 -> 442 ;
443 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
442 -> 443 ;
444 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
442 -> 444 ;
445 [label="sp_async_cor_vel <= 0.004\ngini = 0.798\nsamples = 19\nvalue = [0, 0, 0, 3, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0\n0, 4, 6, 3, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#fbe5fc"] ;
439 -> 445 ;
446 [label="sp_duration_percentage <= 0.017\ngini = 0.766\nsamples = 16\nvalue = [0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0\n0, 2, 6, 3, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f8d1f9"] ;
445 -> 446 ;
447 [label="sp_tempo_std <= 1.0\ngini = 0.653\nsamples = 12\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 6, 1, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f5bdf6"] ;
446 -> 447 ;
448 [label="sp_async_voice_std <= 0.0\ngini = 0.408\nsamples = 7\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 5, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#ee88ef"] ;
447 -> 448 ;
449 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
448 -> 449 ;
450 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 1, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#d89cf2"] ;
448 -> 450 ;
451 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
450 -> 451 ;
452 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
450 -> 452 ;
453 [label="sp_duration_percentage <= 0.014\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#dbf29c"] ;
447 -> 453 ;
454 [label="sp_duration_percentage <= 0.012\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#ffffff"] ;
453 -> 454 ;
455 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
454 -> 455 ;
456 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
454 -> 456 ;
457 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
453 -> 457 ;
458 [label="sp_async_cor_onset <= 0.002\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0\n0, 0, 0, 2, 0, 0, 0]\nclass = Samson François", fillcolor="#f6bde7"] ;
446 -> 458 ;
459 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 2, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
458 -> 459 ;
460 [label="sp_async_voice_std <= 0.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
458 -> 460 ;
461 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
460 -> 461 ;
462 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
460 -> 462 ;
463 [label="sp_async_voice_std <= 0.0\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 2, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#d89cf2"] ;
445 -> 463 ;
464 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
463 -> 464 ;
465 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
463 -> 465 ;
466 [label="sp_async_voice_std <= 0.0\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 4, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#c46aec"] ;
438 -> 466 ;
467 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
466 -> 467 ;
468 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 4, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
466 -> 468 ;
469 [label="sp_duration_percentage <= 0.073\ngini = 0.782\nsamples = 33\nvalue = [0, 0, 6, 1, 2, 0, 0, 0, 0, 5, 0, 0, 1, 0\n5, 0, 12, 1, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f9d3f9"] ;
437 -> 469 ;
470 [label="sp_async_delta <= 0.001\ngini = 0.813\nsamples = 29\nvalue = [0, 0, 6, 1, 2, 0, 0, 0, 0, 5, 0, 0, 1, 0\n5, 0, 8, 1, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#fceefd"] ;
469 -> 470 ;
471 [label="sp_kor_repeated <= -0.018\ngini = 0.604\nsamples = 13\nvalue = [0, 0, 4, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n1, 0, 7, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f5bdf6"] ;
470 -> 471 ;
472 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
471 -> 472 ;
473 [label="sp_async_cor_onset <= 0.0\ngini = 0.48\nsamples = 10\nvalue = [0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n1, 0, 7, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#ec7bee"] ;
471 -> 473 ;
474 [label="sp_key_overlap_ratio <= -0.001\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n1, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
473 -> 474 ;
475 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n1, 0, 0, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#7e39e5"] ;
474 -> 475 ;
476 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
474 -> 476 ;
477 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.219\nsamples = 8\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 7, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e655e9"] ;
473 -> 477 ;
478 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
477 -> 478 ;
479 [label="gini = 0.0\nsamples = 7\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 7, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
477 -> 479 ;
480 [label="sp_async_cor_vel <= 0.007\ngini = 0.805\nsamples = 16\nvalue = [0, 0, 2, 1, 1, 0, 0, 0, 0, 5, 0, 0, 1, 0\n4, 0, 1, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#eefdfd"] ;
470 -> 480 ;
481 [label="sp_async_cor_onset <= 0.001\ngini = 0.793\nsamples = 13\nvalue = [0, 0, 2, 1, 1, 0, 0, 0, 0, 5, 0, 0, 1, 0\n1, 0, 1, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#c9f8f7"] ;
480 -> 481 ;
482 [label="sp_kor_repeated <= -0.01\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#f2f09c"] ;
481 -> 482 ;
483 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
482 -> 483 ;
484 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
482 -> 484 ;
485 [label="sp_kor_repeated <= -0.007\ngini = 0.7\nsamples = 10\nvalue = [0, 0, 0, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0, 0\n1, 0, 1, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#a7f3f2"] ;
481 -> 485 ;
486 [label="sp_kor_repeated <= -0.011\ngini = 0.449\nsamples = 7\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 5, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#7beeec"] ;
485 -> 486 ;
487 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
486 -> 487 ;
488 [label="sp_async_cor_vel <= 0.006\ngini = 0.278\nsamples = 6\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 5, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#61eae8"] ;
486 -> 488 ;
489 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
488 -> 489 ;
490 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
488 -> 490 ;
491 [label="sp_key_overlap_ratio <= -0.001\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n1, 0, 1, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
485 -> 491 ;
492 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
491 -> 492 ;
493 [label="sp_async_voice_std <= 0.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n1, 0, 1, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#ffffff"] ;
491 -> 493 ;
494 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n1, 0, 0, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#7e39e5"] ;
493 -> 494 ;
495 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
493 -> 495 ;
496 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n3, 0, 0, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#7e39e5"] ;
480 -> 496 ;
497 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
469 -> 497 ;
498 [label="sp_async_cor_vel <= 0.023\ngini = 0.926\nsamples = 209\nvalue = [22, 10, 9, 27, 20, 11, 6, 4, 1, 2, 11, 8, 3\n9, 0, 9, 22, 18, 5, 5, 7]\nclass = Vladimir Horowitz", fillcolor="#fdfefa"] ;
436 -> 498 ;
499 [label="sp_duration_percentage <= 0.069\ngini = 0.92\nsamples = 160\nvalue = [22, 7, 8, 23, 7, 6, 4, 3, 1, 1, 10, 7, 3, 9\n0, 6, 12, 18, 4, 5, 4]\nclass = Vladimir Horowitz", fillcolor="#fefffe"] ;
498 -> 499 ;
500 [label="sp_async_cor_vel <= 0.005\ngini = 0.919\nsamples = 155\nvalue = [22, 7, 4, 22, 7, 6, 4, 3, 1, 1, 10, 7, 3, 9\n0, 6, 12, 18, 4, 5, 4]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
499 -> 500 ;
501 [label="sp_kor_repeated <= -0.008\ngini = 0.796\nsamples = 14\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 4\n0, 1, 2, 1, 1, 0, 0]\nclass = Martha Argerich", fillcolor="#ffffff"] ;
500 -> 501 ;
502 [label="sp_async_voice_std <= 0.0\ngini = 0.5\nsamples = 6\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 4\n0, 1, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#9488ef"] ;
501 -> 502 ;
503 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
502 -> 503 ;
504 [label="sp_async_cor_onset <= 0.004\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
502 -> 504 ;
505 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
504 -> 505 ;
506 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
504 -> 506 ;
507 [label="sp_async_voice_std <= 0.0\ngini = 0.656\nsamples = 8\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0\n0, 0, 2, 1, 1, 0, 0]\nclass = Martha Argerich", fillcolor="#bdd7f6"] ;
501 -> 507 ;
508 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
507 -> 508 ;
509 [label="sp_kor_repeated <= -0.007\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 1, 1, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#f5bdf6"] ;
507 -> 509 ;
510 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
509 -> 510 ;
511 [label="sp_async_cor_onset <= 0.004\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 1, 0, 0]\nclass = Samson François", fillcolor="#ffffff"] ;
509 -> 511 ;
512 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
511 -> 512 ;
513 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
511 -> 513 ;
514 [label="sp_kor_repeated <= -0.01\ngini = 0.912\nsamples = 141\nvalue = [22, 7, 4, 22, 7, 6, 4, 2, 1, 1, 10, 3, 3, 5\n0, 5, 10, 17, 3, 5, 4]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
500 -> 514 ;
515 [label="sp_async_voice_std <= 0.0\ngini = 0.916\nsamples = 97\nvalue = [15, 5, 3, 7, 3, 6, 2, 2, 1, 0, 9, 2, 2, 5\n0, 4, 9, 14, 2, 4, 2]\nclass = Sviatoslav Richter", fillcolor="#fffdfd"] ;
514 -> 515 ;
516 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
515 -> 516 ;
517 [label="sp_async_voice_std <= 0.0\ngini = 0.913\nsamples = 94\nvalue = [15, 5, 3, 7, 3, 3, 2, 2, 1, 0, 9, 2, 2, 5\n0, 4, 9, 14, 2, 4, 2]\nclass = Sviatoslav Richter", fillcolor="#fffdfd"] ;
515 -> 517 ;
518 [label="sp_kor_repeated <= -0.014\ngini = 0.889\nsamples = 50\nvalue = [12, 3, 1, 4, 1, 2, 2, 0, 0, 0, 7, 2, 1, 1\n0, 4, 4, 2, 0, 2, 2]\nclass = Sviatoslav Richter", fillcolor="#fcf0e8"] ;
517 -> 518 ;
519 [label="sp_async_cor_onset <= 0.007\ngini = 0.814\nsamples = 26\nvalue = [8, 1, 1, 1, 1, 0, 0, 0, 0, 0, 7, 0, 1, 1\n0, 0, 2, 1, 0, 1, 1]\nclass = Sviatoslav Richter", fillcolor="#fef8f5"] ;
518 -> 519 ;
520 [label="sp_async_delta <= 0.0\ngini = 0.571\nsamples = 7\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#b0e2f5"] ;
519 -> 520 ;
521 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
520 -> 521 ;
522 [label="sp_duration_percentage <= 0.052\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#6ac9ec"] ;
520 -> 522 ;
523 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
522 -> 523 ;
524 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
522 -> 524 ;
525 [label="sp_duration_percentage <= 0.047\ngini = 0.776\nsamples = 19\nvalue = [8, 1, 0, 1, 1, 0, 0, 0, 0, 0, 3, 0, 1, 1\n0, 0, 0, 1, 0, 1, 1]\nclass = Sviatoslav Richter", fillcolor="#f7d8c1"] ;
519 -> 525 ;
526 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.643\nsamples = 14\nvalue = [8, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1\n0, 0, 0, 1, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#f1bb94"] ;
525 -> 526 ;
527 [label="sp_tempo_std <= 0.999\ngini = 0.8\nsamples = 5\nvalue = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1\n0, 0, 0, 1, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
526 -> 527 ;
528 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
527 -> 528 ;
529 [label="sp_key_overlap_ratio <= -0.004\ngini = 0.75\nsamples = 4\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1\n0, 0, 0, 1, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
527 -> 529 ;
530 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
529 -> 530 ;
531 [label="sp_async_voice_std <= 0.0\ngini = 0.667\nsamples = 3\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
529 -> 531 ;
532 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
531 -> 532 ;
533 [label="sp_async_delta <= 0.001\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
531 -> 533 ;
534 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
533 -> 534 ;
535 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
533 -> 535 ;
536 [label="sp_kor_repeated <= -0.019\ngini = 0.37\nsamples = 9\nvalue = [7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#eca06a"] ;
526 -> 536 ;
537 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
536 -> 537 ;
538 [label="sp_async_delta <= 0.002\ngini = 0.219\nsamples = 8\nvalue = [7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e99355"] ;
536 -> 538 ;
539 [label="gini = 0.0\nsamples = 7\nvalue = [7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
538 -> 539 ;
540 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
538 -> 540 ;
541 [label="sp_async_cor_onset <= 0.017\ngini = 0.72\nsamples = 5\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0\n0, 0, 0, 0, 0, 1, 1]\nclass = Glenn Gould", fillcolor="#ceedf8"] ;
525 -> 541 ;
542 [label="sp_kor_repeated <= -0.021\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 1]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
541 -> 542 ;
543 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
542 -> 543 ;
544 [label="sp_async_cor_vel <= 0.015\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
542 -> 544 ;
545 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Lang Lang", fillcolor="#e54d39"] ;
544 -> 545 ;
546 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
544 -> 546 ;
547 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
541 -> 547 ;
548 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.889\nsamples = 24\nvalue = [4, 2, 0, 3, 0, 2, 2, 0, 0, 0, 0, 2, 0, 0\n0, 4, 2, 1, 0, 1, 1]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
518 -> 548 ;
549 [label="sp_kor_repeated <= -0.013\ngini = 0.776\nsamples = 7\nvalue = [0, 2, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 1]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
548 -> 549 ;
550 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
549 -> 550 ;
551 [label="sp_kor_repeated <= -0.011\ngini = 0.72\nsamples = 5\nvalue = [0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 1]\nclass = Vladimir Ashkenazy", fillcolor="#f8ecce"] ;
549 -> 551 ;
552 [label="sp_kor_repeated <= -0.012\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 1]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
551 -> 552 ;
553 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
552 -> 553 ;
554 [label="sp_duration_percentage <= 0.021\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
552 -> 554 ;
555 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
554 -> 555 ;
556 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Lang Lang", fillcolor="#e54d39"] ;
554 -> 556 ;
557 [label="gini = 0.0\nsamples = 2\nvalue = [0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
551 -> 557 ;
558 [label="sp_async_cor_vel <= 0.009\ngini = 0.83\nsamples = 17\nvalue = [4, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0\n0, 4, 1, 1, 0, 1, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
548 -> 558 ;
559 [label="sp_tempo_std <= 1.0\ngini = 0.375\nsamples = 4\nvalue = [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#eeab7b"] ;
558 -> 559 ;
560 [label="gini = 0.0\nsamples = 3\nvalue = [3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
559 -> 560 ;
561 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
559 -> 561 ;
562 [label="sp_async_voice_std <= 0.0\ngini = 0.84\nsamples = 13\nvalue = [1, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0\n0, 3, 1, 1, 0, 1, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
558 -> 562 ;
563 [label="sp_async_cor_vel <= 0.01\ngini = 0.688\nsamples = 8\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 1, 0, 1, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
562 -> 563 ;
564 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
563 -> 564 ;
565 [label="sp_async_cor_onset <= 0.008\ngini = 0.667\nsamples = 6\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 1, 0, 1, 0]\nclass = Emil Gilels", fillcolor="#e0b0f5"] ;
563 -> 565 ;
566 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
565 -> 566 ;
567 [label="sp_async_cor_onset <= 0.015\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 1, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#d89cf2"] ;
565 -> 567 ;
568 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#cb7bee"] ;
567 -> 568 ;
569 [label="sp_async_cor_onset <= 0.011\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
568 -> 569 ;
570 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
569 -> 570 ;
571 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
569 -> 571 ;
572 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 2, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
568 -> 572 ;
573 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
567 -> 573 ;
574 [label="sp_kor_repeated <= -0.011\ngini = 0.72\nsamples = 5\nvalue = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#cee1f8"] ;
562 -> 574 ;
575 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.667\nsamples = 3\nvalue = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
574 -> 575 ;
576 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
575 -> 576 ;
577 [label="sp_async_delta <= 0.001\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
575 -> 577 ;
578 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
577 -> 578 ;
579 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
577 -> 579 ;
580 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
574 -> 580 ;
581 [label="sp_duration_percentage <= 0.026\ngini = 0.879\nsamples = 44\nvalue = [3, 2, 2, 3, 2, 1, 0, 2, 1, 0, 2, 0, 1, 4\n0, 0, 5, 12, 2, 2, 0]\nclass = Samson François", fillcolor="#fadbf2"] ;
517 -> 581 ;
582 [label="sp_async_voice_std <= 0.001\ngini = 0.48\nsamples = 10\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 1, 7, 0, 0, 0]\nclass = Samson François", fillcolor="#ee7bcf"] ;
581 -> 582 ;
583 [label="sp_async_cor_vel <= 0.01\ngini = 0.75\nsamples = 4\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
582 -> 583 ;
584 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
583 -> 584 ;
585 [label="sp_async_cor_onset <= 0.007\ngini = 0.667\nsamples = 3\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
583 -> 585 ;
586 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
585 -> 586 ;
587 [label="sp_async_voice_std <= 0.001\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
585 -> 587 ;
588 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
587 -> 588 ;
589 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
587 -> 589 ;
590 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 6, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
582 -> 590 ;
591 [label="sp_async_delta <= 0.003\ngini = 0.915\nsamples = 34\nvalue = [2, 2, 2, 3, 2, 1, 0, 2, 1, 0, 1, 0, 1, 4\n0, 0, 4, 5, 2, 2, 0]\nclass = Samson François", fillcolor="#fef8fd"] ;
581 -> 591 ;
592 [label="sp_async_cor_vel <= 0.011\ngini = 0.901\nsamples = 22\nvalue = [1, 1, 2, 3, 2, 0, 0, 2, 1, 0, 1, 0, 1, 4\n0, 0, 0, 1, 2, 1, 0]\nclass = Wilhelm Kempff", fillcolor="#f6f5fe"] ;
591 -> 592 ;
593 [label="sp_async_cor_vel <= 0.009\ngini = 0.667\nsamples = 6\nvalue = [0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 2, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
592 -> 593 ;
594 [label="sp_async_delta <= 0.002\ngini = 0.5\nsamples = 4\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 2, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
593 -> 594 ;
595 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 2, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
594 -> 595 ;
596 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
594 -> 596 ;
597 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
593 -> 597 ;
598 [label="sp_async_voice_std <= 0.001\ngini = 0.859\nsamples = 16\nvalue = [1, 1, 0, 3, 0, 0, 0, 2, 1, 0, 1, 0, 1, 4\n0, 0, 0, 1, 0, 1, 0]\nclass = Wilhelm Kempff", fillcolor="#f1f0fd"] ;
592 -> 598 ;
599 [label="sp_key_overlap_ratio <= -0.001\ngini = 0.741\nsamples = 9\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 4\n0, 0, 0, 1, 0, 1, 0]\nclass = Wilhelm Kempff", fillcolor="#bcb5f5"] ;
598 -> 599 ;
600 [label="sp_tempo_std <= 0.999\ngini = 0.75\nsamples = 4\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 1, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
599 -> 600 ;
601 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Mitsuko Uchida", fillcolor="#39e5b1"] ;
600 -> 601 ;
602 [label="sp_tempo_std <= 0.999\ngini = 0.667\nsamples = 3\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 1, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
600 -> 602 ;
603 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
602 -> 603 ;
604 [label="sp_async_cor_vel <= 0.014\ngini = 0.5\nsamples = 2\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Vladimir Ashkenazy", fillcolor="#ffffff"] ;
602 -> 604 ;
605 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
604 -> 605 ;
606 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
604 -> 606 ;
607 [label="sp_kor_repeated <= -0.012\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#796aec"] ;
599 -> 607 ;
608 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
607 -> 608 ;
609 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
607 -> 609 ;
610 [label="sp_key_overlap_ratio <= 0.001\ngini = 0.694\nsamples = 7\nvalue = [1, 0, 0, 3, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#f1fad7"] ;
598 -> 610 ;
611 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
610 -> 611 ;
612 [label="sp_kor_repeated <= -0.012\ngini = 0.625\nsamples = 4\nvalue = [1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#bdf6d4"] ;
610 -> 612 ;
613 [label="sp_kor_repeated <= -0.012\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
612 -> 613 ;
614 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
613 -> 614 ;
615 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
613 -> 615 ;
616 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
612 -> 616 ;
617 [label="sp_async_cor_vel <= 0.017\ngini = 0.75\nsamples = 12\nvalue = [1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 4, 0, 1, 0]\nclass = Zoltán Kocsis", fillcolor="#ffffff"] ;
591 -> 617 ;
618 [label="sp_async_delta <= 0.003\ngini = 0.32\nsamples = 5\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 4, 0, 0, 0]\nclass = Samson François", fillcolor="#ec6ac9"] ;
617 -> 618 ;
619 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
618 -> 619 ;
620 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 4, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
618 -> 620 ;
621 [label="sp_key_overlap_ratio <= -0.001\ngini = 0.612\nsamples = 7\nvalue = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 1, 0]\nclass = Zoltán Kocsis", fillcolor="#f09cf2"] ;
617 -> 621 ;
622 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 4, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
621 -> 622 ;
623 [label="sp_async_cor_onset <= 0.015\ngini = 0.667\nsamples = 3\nvalue = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
621 -> 623 ;
624 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
623 -> 624 ;
625 [label="sp_key_overlap_ratio <= -0.001\ngini = 0.5\nsamples = 2\nvalue = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
623 -> 625 ;
626 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
625 -> 626 ;
627 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
625 -> 627 ;
628 [label="sp_async_cor_vel <= 0.012\ngini = 0.835\nsamples = 44\nvalue = [7, 2, 1, 15, 4, 0, 2, 0, 0, 1, 1, 1, 1, 0\n0, 1, 1, 3, 1, 1, 2]\nclass = Vladimir Horowitz", fillcolor="#eff9d4"] ;
514 -> 628 ;
629 [label="sp_async_cor_vel <= 0.01\ngini = 0.809\nsamples = 38\nvalue = [3, 2, 1, 15, 4, 0, 1, 0, 0, 1, 0, 1, 1, 0\n0, 1, 1, 3, 1, 1, 2]\nclass = Vladimir Horowitz", fillcolor="#e8f7bf"] ;
628 -> 629 ;
630 [label="sp_duration_percentage <= 0.014\ngini = 0.861\nsamples = 33\nvalue = [3, 2, 1, 10, 4, 0, 1, 0, 0, 1, 0, 1, 1, 0\n0, 1, 1, 3, 1, 1, 2]\nclass = Vladimir Horowitz", fillcolor="#f0fad6"] ;
629 -> 630 ;
631 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
630 -> 631 ;
632 [label="sp_async_delta <= 0.0\ngini = 0.855\nsamples = 31\nvalue = [3, 2, 1, 10, 2, 0, 1, 0, 0, 1, 0, 1, 1, 0\n0, 1, 1, 3, 1, 1, 2]\nclass = Vladimir Horowitz", fillcolor="#edf8ce"] ;
630 -> 632 ;
633 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
632 -> 633 ;
634 [label="sp_async_delta <= 0.001\ngini = 0.844\nsamples = 29\nvalue = [1, 2, 1, 10, 2, 0, 1, 0, 0, 1, 0, 1, 1, 0\n0, 1, 1, 3, 1, 1, 2]\nclass = Vladimir Horowitz", fillcolor="#ecf8ca"] ;
632 -> 634 ;
635 [label="sp_async_delta <= 0.0\ngini = 0.48\nsamples = 10\nvalue = [0, 0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#cfee7b"] ;
634 -> 635 ;
636 [label="sp_key_overlap_ratio <= -0.002\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
635 -> 636 ;
637 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
636 -> 637 ;
638 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
636 -> 638 ;
639 [label="sp_async_cor_vel <= 0.006\ngini = 0.219\nsamples = 8\nvalue = [0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#c1e955"] ;
635 -> 639 ;
640 [label="sp_async_cor_onset <= 0.005\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
639 -> 640 ;
641 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
640 -> 641 ;
642 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
640 -> 642 ;
643 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
639 -> 643 ;
644 [label="sp_kor_repeated <= -0.01\ngini = 0.909\nsamples = 19\nvalue = [1, 2, 1, 3, 2, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 2, 1, 1, 2]\nclass = Vladimir Horowitz", fillcolor="#fbfdf3"] ;
634 -> 644 ;
645 [label="sp_key_overlap_ratio <= -0.002\ngini = 0.64\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 2, 0, 1, 2]\nclass = Samson François", fillcolor="#ffffff"] ;
644 -> 645 ;
646 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 2]\nclass = Lang Lang", fillcolor="#f2a69c"] ;
645 -> 646 ;
647 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
646 -> 647 ;
648 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 2]\nclass = Lang Lang", fillcolor="#e54d39"] ;
646 -> 648 ;
649 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 2, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
645 -> 649 ;
650 [label="sp_async_cor_vel <= 0.009\ngini = 0.878\nsamples = 14\nvalue = [1, 2, 1, 3, 2, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#f9fdee"] ;
644 -> 650 ;
651 [label="sp_kor_repeated <= -0.007\ngini = 0.86\nsamples = 11\nvalue = [1, 1, 1, 3, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#f1fad7"] ;
650 -> 651 ;
652 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.889\nsamples = 9\nvalue = [1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
651 -> 652 ;
653 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
652 -> 653 ;
654 [label="sp_async_cor_onset <= 0.004\ngini = 0.875\nsamples = 8\nvalue = [1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
652 -> 654 ;
655 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
654 -> 655 ;
656 [label="sp_duration_percentage <= 0.016\ngini = 0.857\nsamples = 7\nvalue = [1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
654 -> 656 ;
657 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
656 -> 657 ;
658 [label="sp_kor_repeated <= -0.009\ngini = 0.833\nsamples = 6\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = András Schiff", fillcolor="#ffffff"] ;
656 -> 658 ;
659 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
658 -> 659 ;
660 [label="sp_tempo_std <= 1.0\ngini = 0.8\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
658 -> 660 ;
661 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
660 -> 661 ;
662 [label="sp_async_cor_onset <= 0.005\ngini = 0.75\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
660 -> 662 ;
663 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
662 -> 663 ;
664 [label="sp_async_delta <= 0.001\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
662 -> 664 ;
665 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
664 -> 665 ;
666 [label="sp_kor_repeated <= -0.008\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
664 -> 666 ;
667 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
666 -> 667 ;
668 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
666 -> 668 ;
669 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
651 -> 669 ;
670 [label="sp_async_cor_onset <= 0.01\ngini = 0.444\nsamples = 3\nvalue = [0, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#c2f29c"] ;
650 -> 670 ;
671 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
670 -> 671 ;
672 [label="gini = 0.0\nsamples = 1\nvalue = [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
670 -> 672 ;
673 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
629 -> 673 ;
674 [label="sp_kor_repeated <= -0.01\ngini = 0.5\nsamples = 6\nvalue = [4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#efb388"] ;
628 -> 674 ;
675 [label="sp_tempo_std <= 0.999\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
674 -> 675 ;
676 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
675 -> 676 ;
677 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
675 -> 677 ;
678 [label="gini = 0.0\nsamples = 4\nvalue = [4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
674 -> 678 ;
679 [label="sp_async_cor_onset <= 0.017\ngini = 0.32\nsamples = 5\nvalue = [0, 0, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#ece96a"] ;
499 -> 679 ;
680 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
679 -> 680 ;
681 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
679 -> 681 ;
682 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.855\nsamples = 49\nvalue = [0, 3, 1, 4, 13, 5, 2, 1, 0, 1, 1, 1, 0, 0\n0, 3, 10, 0, 1, 0, 3]\nclass = Walter Gieseking", fillcolor="#f6fdf0"] ;
498 -> 682 ;
683 [label="sp_async_delta <= 0.003\ngini = 0.667\nsamples = 6\nvalue = [0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#f5e0b0"] ;
682 -> 683 ;
684 [label="gini = 0.0\nsamples = 3\nvalue = [0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Ashkenazy", fillcolor="#e5b139"] ;
683 -> 684 ;
685 [label="sp_async_voice_std <= 0.001\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 1, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
683 -> 685 ;
686 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
685 -> 686 ;
687 [label="sp_duration_percentage <= 0.085\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#ffffff"] ;
685 -> 687 ;
688 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
687 -> 688 ;
689 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
687 -> 689 ;
690 [label="sp_async_delta <= 0.004\ngini = 0.824\nsamples = 43\nvalue = [0, 0, 1, 3, 13, 5, 2, 1, 0, 1, 1, 1, 0, 0\n0, 2, 10, 0, 0, 0, 3]\nclass = Walter Gieseking", fillcolor="#f4fded"] ;
682 -> 690 ;
691 [label="sp_async_delta <= 0.003\ngini = 0.799\nsamples = 38\nvalue = [0, 0, 1, 0, 12, 5, 2, 1, 0, 1, 1, 0, 0, 0\n0, 2, 10, 0, 0, 0, 3]\nclass = Walter Gieseking", fillcolor="#f6fdf1"] ;
690 -> 691 ;
692 [label="sp_async_cor_onset <= 0.028\ngini = 0.818\nsamples = 31\nvalue = [0, 0, 1, 0, 7, 5, 2, 1, 0, 1, 0, 0, 0, 0\n0, 2, 9, 0, 0, 0, 3]\nclass = Zoltán Kocsis", fillcolor="#fdeefd"] ;
691 -> 692 ;
693 [label="sp_duration_percentage <= 0.079\ngini = 0.656\nsamples = 16\nvalue = [0, 0, 1, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 1, 7, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#fcebfc"] ;
692 -> 693 ;
694 [label="sp_async_delta <= 0.002\ngini = 0.6\nsamples = 10\nvalue = [0, 0, 1, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 1, 1, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#bcf191"] ;
693 -> 694 ;
695 [label="sp_async_cor_onset <= 0.01\ngini = 0.519\nsamples = 9\nvalue = [0, 0, 1, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#b3ef83"] ;
694 -> 695 ;
696 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
695 -> 696 ;
697 [label="sp_tempo_std <= 0.998\ngini = 0.406\nsamples = 8\nvalue = [0, 0, 0, 0, 6, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#a9ec72"] ;
695 -> 697 ;
698 [label="sp_async_delta <= 0.002\ngini = 0.245\nsamples = 7\nvalue = [0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#9ae95a"] ;
697 -> 698 ;
699 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
698 -> 699 ;
700 [label="sp_key_overlap_ratio <= -0.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#ffffff"] ;
698 -> 700 ;
701 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
700 -> 701 ;
702 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
700 -> 702 ;
703 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
697 -> 703 ;
704 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
694 -> 704 ;
705 [label="gini = 0.0\nsamples = 6\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 6, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
693 -> 705 ;
706 [label="sp_duration_percentage <= 0.122\ngini = 0.809\nsamples = 15\nvalue = [0, 0, 0, 0, 1, 5, 1, 1, 0, 1, 0, 0, 0, 0\n0, 1, 2, 0, 0, 0, 3]\nclass = Claudio Arrau", fillcolor="#e3fbde"] ;
692 -> 706 ;
707 [label="sp_async_voice_std <= 0.001\ngini = 0.68\nsamples = 10\nvalue = [0, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 2]\nclass = Claudio Arrau", fillcolor="#c0f5b5"] ;
706 -> 707 ;
708 [label="sp_kor_repeated <= -0.023\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 2]\nclass = Lang Lang", fillcolor="#f6c4bd"] ;
707 -> 708 ;
709 [label="sp_async_cor_vel <= 0.055\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
708 -> 709 ;
710 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
709 -> 710 ;
711 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
709 -> 711 ;
712 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 2]\nclass = Lang Lang", fillcolor="#e54d39"] ;
708 -> 712 ;
713 [label="sp_kor_repeated <= -0.04\ngini = 0.278\nsamples = 6\nvalue = [0, 0, 0, 0, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#78ea61"] ;
707 -> 713 ;
714 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
713 -> 714 ;
715 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
713 -> 715 ;
716 [label="sp_kor_repeated <= -0.053\ngini = 0.72\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 1]\nclass = Zoltán Kocsis", fillcolor="#f8cef8"] ;
706 -> 716 ;
717 [label="sp_async_cor_onset <= 0.085\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
716 -> 717 ;
718 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
717 -> 718 ;
719 [label="sp_async_cor_onset <= 0.097\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
717 -> 719 ;
720 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
719 -> 720 ;
721 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 1]\nclass = Lang Lang", fillcolor="#e54d39"] ;
719 -> 721 ;
722 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 2, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
716 -> 722 ;
723 [label="sp_async_cor_onset <= 0.03\ngini = 0.449\nsamples = 7\nvalue = [0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#aeee7b"] ;
691 -> 723 ;
724 [label="sp_kor_repeated <= -0.019\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
723 -> 724 ;
725 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
724 -> 725 ;
726 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
724 -> 726 ;
727 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
723 -> 727 ;
728 [label="sp_duration_percentage <= 0.207\ngini = 0.56\nsamples = 5\nvalue = [0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#dbf29c"] ;
690 -> 728 ;
729 [label="sp_kor_repeated <= -0.019\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#cfee7b"] ;
728 -> 729 ;
730 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
729 -> 730 ;
731 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
729 -> 731 ;
732 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
728 -> 732 ;
733 [label="sp_async_cor_vel <= 0.002\ngini = 0.852\nsamples = 74\nvalue = [2, 0, 2, 1, 1, 1, 3, 1, 0, 16, 4, 0, 1, 3\n5, 5, 2, 21, 3, 1, 2]\nclass = Samson François", fillcolor="#fdeef9"] ;
435 -> 733 ;
734 [label="sp_async_cor_onset <= 0.0\ngini = 0.383\nsamples = 18\nvalue = [0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 14, 1, 0, 0]\nclass = Samson François", fillcolor="#eb68c8"] ;
733 -> 734 ;
735 [label="sp_duration_percentage <= 0.02\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
734 -> 735 ;
736 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 1, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
735 -> 736 ;
737 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
735 -> 737 ;
738 [label="sp_kor_repeated <= -0.006\ngini = 0.227\nsamples = 16\nvalue = [0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 14, 0, 0, 0]\nclass = Samson François", fillcolor="#e853c1"] ;
734 -> 738 ;
739 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
738 -> 739 ;
740 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.124\nsamples = 15\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 14, 0, 0, 0]\nclass = Samson François", fillcolor="#e747bc"] ;
738 -> 740 ;
741 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
740 -> 741 ;
742 [label="gini = 0.0\nsamples = 14\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 14, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
740 -> 742 ;
743 [label="sp_async_cor_onset <= 0.002\ngini = 0.871\nsamples = 56\nvalue = [2, 0, 1, 0, 1, 1, 2, 1, 0, 16, 4, 0, 1, 3\n5, 5, 2, 7, 2, 1, 2]\nclass = Alicia de Larrocha", fillcolor="#dbfafa"] ;
733 -> 743 ;
744 [label="sp_kor_repeated <= -0.005\ngini = 0.773\nsamples = 15\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1\n5, 4, 1, 0, 2, 0, 0]\nclass = Friedrich Gulda", fillcolor="#f3edfd"] ;
743 -> 744 ;
745 [label="sp_async_cor_onset <= 0.0\ngini = 0.719\nsamples = 8\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0\n0, 3, 1, 0, 2, 0, 0]\nclass = Emil Gilels", fillcolor="#f2defb"] ;
744 -> 745 ;
746 [label="gini = 0.0\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 3, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
745 -> 746 ;
747 [label="sp_async_cor_onset <= 0.001\ngini = 0.64\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 2, 0, 0]\nclass = Alfred Brendel", fillcolor="#ffffff"] ;
745 -> 747 ;
748 [label="sp_key_overlap_ratio <= -0.002\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#9cf2a6"] ;
747 -> 748 ;
749 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alfred Brendel", fillcolor="#39e54d"] ;
748 -> 749 ;
750 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
748 -> 750 ;
751 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 2, 0, 0]\nclass = Radu Lupu", fillcolor="#e53986"] ;
747 -> 751 ;
752 [label="sp_duration_percentage <= 0.011\ngini = 0.449\nsamples = 7\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n5, 1, 0, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#a97bee"] ;
744 -> 752 ;
753 [label="sp_key_overlap_ratio <= -0.003\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 1, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#ffffff"] ;
752 -> 753 ;
754 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
753 -> 754 ;
755 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
753 -> 755 ;
756 [label="gini = 0.0\nsamples = 5\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n5, 0, 0, 0, 0, 0, 0]\nclass = Friedrich Gulda", fillcolor="#7e39e5"] ;
752 -> 756 ;
757 [label="sp_key_overlap_ratio <= -0.001\ngini = 0.797\nsamples = 41\nvalue = [2, 0, 1, 0, 1, 1, 0, 1, 0, 16, 4, 0, 1, 2\n0, 1, 1, 7, 0, 1, 2]\nclass = Alicia de Larrocha", fillcolor="#cbf8f7"] ;
743 -> 757 ;
758 [label="sp_kor_repeated <= -0.006\ngini = 0.57\nsamples = 22\nvalue = [2, 0, 1, 0, 0, 0, 0, 0, 0, 14, 2, 0, 1, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#88efee"] ;
757 -> 758 ;
759 [label="sp_async_delta <= 0.0\ngini = 0.64\nsamples = 5\nvalue = [2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#ffffff"] ;
758 -> 759 ;
760 [label="gini = 0.0\nsamples = 2\nvalue = [2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
759 -> 760 ;
761 [label="sp_duration_percentage <= 0.015\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#9cdbf2"] ;
759 -> 761 ;
762 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
761 -> 762 ;
763 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
761 -> 763 ;
764 [label="sp_async_delta <= 0.001\ngini = 0.401\nsamples = 17\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 13, 0, 0, 1, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#6bece9"] ;
758 -> 764 ;
765 [label="sp_tempo_std <= 1.0\ngini = 0.328\nsamples = 16\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 1, 0\n0, 0, 1, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#61eae8"] ;
764 -> 765 ;
766 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 1, 0, 0, 0, 0]\nclass = Zoltán Kocsis", fillcolor="#e239e5"] ;
765 -> 766 ;
767 [label="sp_tempo_std <= 1.0\ngini = 0.24\nsamples = 15\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 1, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#55e9e6"] ;
765 -> 767 ;
768 [label="sp_async_cor_vel <= 0.003\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
767 -> 768 ;
769 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
768 -> 769 ;
770 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
768 -> 770 ;
771 [label="sp_async_cor_vel <= 0.003\ngini = 0.142\nsamples = 13\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#49e7e4"] ;
767 -> 771 ;
772 [label="sp_kor_repeated <= -0.006\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
771 -> 772 ;
773 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
772 -> 773 ;
774 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
772 -> 774 ;
775 [label="gini = 0.0\nsamples = 11\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
771 -> 775 ;
776 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = András Schiff", fillcolor="#e5e239"] ;
764 -> 776 ;
777 [label="sp_async_voice_std <= 0.0\ngini = 0.842\nsamples = 19\nvalue = [0, 0, 0, 0, 1, 1, 0, 1, 0, 2, 2, 0, 0, 2\n0, 1, 0, 6, 0, 1, 2]\nclass = Samson François", fillcolor="#f9d0ee"] ;
757 -> 777 ;
778 [label="sp_async_delta <= 0.001\ngini = 0.84\nsamples = 10\nvalue = [0, 0, 0, 0, 1, 0, 0, 1, 0, 2, 1, 0, 0, 2\n0, 1, 0, 0, 0, 0, 2]\nclass = Alicia de Larrocha", fillcolor="#ffffff"] ;
777 -> 778 ;
779 [label="sp_duration_percentage <= 0.015\ngini = 0.812\nsamples = 8\nvalue = [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 2\n0, 1, 0, 0, 0, 0, 2]\nclass = Wilhelm Kempff", fillcolor="#ffffff"] ;
778 -> 779 ;
780 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 2]\nclass = Lang Lang", fillcolor="#e54d39"] ;
779 -> 780 ;
781 [label="sp_async_voice_std <= 0.0\ngini = 0.778\nsamples = 6\nvalue = [0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 2\n0, 1, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#dbd7fa"] ;
779 -> 781 ;
782 [label="sp_async_cor_onset <= 0.003\ngini = 0.444\nsamples = 3\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#a69cf2"] ;
781 -> 782 ;
783 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Walter Gieseking", fillcolor="#86e539"] ;
782 -> 783 ;
784 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2\n0, 0, 0, 0, 0, 0, 0]\nclass = Wilhelm Kempff", fillcolor="#4d39e5"] ;
782 -> 784 ;
785 [label="sp_async_cor_vel <= 0.005\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
781 -> 785 ;
786 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 1, 0, 0, 0, 0, 0]\nclass = Emil Gilels", fillcolor="#b139e5"] ;
785 -> 786 ;
787 [label="sp_tempo_std <= 1.0\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#ffffff"] ;
785 -> 787 ;
788 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
787 -> 788 ;
789 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Daniel Barenboim", fillcolor="#39e57e"] ;
787 -> 789 ;
790 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Alicia de Larrocha", fillcolor="#39e5e2"] ;
778 -> 790 ;
791 [label="sp_async_cor_onset <= 0.005\ngini = 0.519\nsamples = 9\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 6, 0, 1, 0]\nclass = Samson François", fillcolor="#ef83d2"] ;
777 -> 791 ;
792 [label="sp_kor_repeated <= -0.006\ngini = 0.406\nsamples = 8\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 6, 0, 1, 0]\nclass = Samson François", fillcolor="#ec72cc"] ;
791 -> 792 ;
793 [label="gini = 0.0\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 4, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
792 -> 793 ;
794 [label="sp_async_cor_vel <= 0.003\ngini = 0.625\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 2, 0, 1, 0]\nclass = Samson François", fillcolor="#f6bde7"] ;
792 -> 794 ;
795 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 2, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
794 -> 795 ;
796 [label="sp_async_cor_vel <= 0.003\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
794 -> 796 ;
797 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
796 -> 797 ;
798 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
796 -> 798 ;
799 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Claudio Arrau", fillcolor="#56e539"] ;
791 -> 799 ;
800 [label="sp_duration_percentage <= 0.075\ngini = 0.58\nsamples = 24\nvalue = [1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0\n0, 0, 0, 15, 0, 1, 0]\nclass = Samson François", fillcolor="#f08ed6"] ;
434 -> 800 ;
801 [label="sp_duration_percentage <= 0.032\ngini = 0.296\nsamples = 18\nvalue = [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 15, 0, 0, 0]\nclass = Samson François", fillcolor="#ea5cc4"] ;
800 -> 801 ;
802 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
801 -> 802 ;
803 [label="sp_key_overlap_ratio <= -0.001\ngini = 0.215\nsamples = 17\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 15, 0, 0, 0]\nclass = Samson François", fillcolor="#e852c0"] ;
801 -> 803 ;
804 [label="gini = 0.0\nsamples = 12\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 12, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
803 -> 804 ;
805 [label="sp_key_overlap_ratio <= -0.0\ngini = 0.56\nsamples = 5\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 3, 0, 0, 0]\nclass = Samson François", fillcolor="#f29cdb"] ;
803 -> 805 ;
806 [label="gini = 0.0\nsamples = 1\nvalue = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Sviatoslav Richter", fillcolor="#e58139"] ;
805 -> 806 ;
807 [label="sp_async_voice_std <= 0.001\ngini = 0.375\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 3, 0, 0, 0]\nclass = Samson François", fillcolor="#ee7bcf"] ;
805 -> 807 ;
808 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 2, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
807 -> 808 ;
809 [label="sp_duration_percentage <= 0.063\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
807 -> 809 ;
810 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
809 -> 810 ;
811 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 1, 0, 0, 0]\nclass = Samson François", fillcolor="#e539b7"] ;
809 -> 811 ;
812 [label="sp_kor_repeated <= -0.057\ngini = 0.778\nsamples = 6\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Vladimir Horowitz", fillcolor="#f1fad7"] ;
800 -> 812 ;
813 [label="gini = 0.0\nsamples = 2\nvalue = [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Vladimir Horowitz", fillcolor="#b7e539"] ;
812 -> 813 ;
814 [label="sp_async_delta <= 0.006\ngini = 0.75\nsamples = 4\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
812 -> 814 ;
815 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Martha Argerich", fillcolor="#3986e5"] ;
814 -> 815 ;
816 [label="sp_key_overlap_ratio <= -0.0\ngini = 0.667\nsamples = 3\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
814 -> 816 ;
817 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n0, 0, 0, 0, 0, 1, 0]\nclass = Murray Perahia", fillcolor="#e53956"] ;
816 -> 817 ;
818 [label="sp_tempo_std <= 0.994\ngini = 0.5\nsamples = 2\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#ffffff"] ;
816 -> 818 ;
819 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Robert Casadesus", fillcolor="#3956e5"] ;
818 -> 819 ;
820 [label="gini = 0.0\nsamples = 1\nvalue = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0\n0, 0, 0, 0, 0, 0, 0]\nclass = Glenn Gould", fillcolor="#39b7e5"] ;
818 -> 820 ;
}
